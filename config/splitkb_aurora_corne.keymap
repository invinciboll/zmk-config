/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        Ae: Ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp LEFT_CONTROL &kp LEFT_ALT>;
            label = "AE";
        };

        Ue: Ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp LEFT_CONTROL &kp LEFT_ALT>;
            label = "UE";
        };

        Oe: Oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp LEFT_CONTROL &kp LEFT_ALT>;
            label = "OE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q     &kp W  &kp E    &kp R  &kp T        &kp DE_Y   &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LSHFT         &kp A     &kp S  &kp D    &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp DE_Z  &kp X  &kp C    &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                   &kp TAB  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &kp RIGHT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1        &kp F2        &kp F3  &kp F4        &kp F5          &kp F6          &kp F7    &kp F8  &kp F9     &kp F10  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp N3  &kp NUMBER_4  &kp N5          &kp LEFT_ARROW  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &kp N6        &kp DE_N7     &kp N8  &kp N9        &kp NUMBER_0    &trans          &trans    &trans  &trans     &trans   &trans
                                    &trans  &trans        &trans          &trans          &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT            &kp HASH           &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS        &kp LPAR  &kp RPAR  &kp KP_MULTIPLY  &trans
&trans  &kp DE_LT  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp EQUAL    &kp MINUS  &kp UNDERSCORE  &kp LBKT  &kp RBKT  &kp BSLH         &kp GRAVE
&trans  &trans     &trans            &trans             &trans            &trans       &trans     &kp PLUS        &kp LBRC  &kp RBRC  &kp PIPE         &kp TILDE
                                     &trans             &trans            &trans       &trans     &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans             &kp DE_U_UMLAUT  &trans            &kp DE_O_UMLAUT  &trans      &kp C_AL_TASK_MANAGER
&bt BT_CLR_ALL  &kp DE_A_UMLAUT  &kp DE_SHARP_S  &trans        &trans        &trans          &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_PREVIOUS   &kp C_NEXT  &trans
&trans          &trans           &trans          &trans        &trans        &trans          &trans             &trans           &trans            &trans           &trans      &trans
                                                 &trans        &trans        &trans          &trans             &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
